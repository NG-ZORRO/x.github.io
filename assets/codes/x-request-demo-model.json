{"highlightCode":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Component<span class=\"token punctuation\">,</span> computed<span class=\"token punctuation\">,</span> linkedSignal<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">,</span> signal<span class=\"token punctuation\">,</span> TemplateRef<span class=\"token punctuation\">,</span> viewChild <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> FormsModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/forms'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> NzButtonModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ng-zorro-antd/button'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> NzDescriptionsModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ng-zorro-antd/descriptions'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> NzFlexModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ng-zorro-antd/flex'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> NzInputModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ng-zorro-antd/input'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> NzSplitterModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ng-zorro-antd/splitter'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> NzTypographyModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ng-zorro-antd/typography'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> NxThoughtChainItem<span class=\"token punctuation\">,</span> NxThoughtChainModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ng-zorro-x/thought-chain'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> XRequest<span class=\"token punctuation\">,</span> XRequestOptions <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ng-zorro-x/x-request'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Component</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  selector<span class=\"token operator\">:</span> <span class=\"token string\">'nx-demo-x-request-model'</span><span class=\"token punctuation\">,</span>\n  imports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    FormsModule<span class=\"token punctuation\">,</span>\n    NzButtonModule<span class=\"token punctuation\">,</span>\n    NzDescriptionsModule<span class=\"token punctuation\">,</span>\n    NzFlexModule<span class=\"token punctuation\">,</span>\n    NzInputModule<span class=\"token punctuation\">,</span>\n    NzSplitterModule<span class=\"token punctuation\">,</span>\n    NzTypographyModule<span class=\"token punctuation\">,</span>\n    NxThoughtChainModule\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token template-string\">template: <span class=\"token html\">`\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-splitter</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-splitter-panel</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-flex</span> <span class=\"token attr-name\">nzVertical</span> <span class=\"token attr-name\">nzGap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>large<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">[style.margin-inline-end.px]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>16<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">nz-input</span> <span class=\"token attr-name\">[(ngModel)]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>questionText<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-flex</span> <span class=\"token attr-name\">nzGap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>small<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">nz-button</span> <span class=\"token attr-name\">nzType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>primary<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">[disabled]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>status() === 'pending'<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">(click)</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>request()<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n              Request\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">nz-button</span> <span class=\"token attr-name\">nzType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>primary<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">[disabled]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>status() !== 'pending'<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">(click)</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>abort()<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n              Request Abort\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-flex</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-flex</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-splitter-panel</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-splitter-panel</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nx-thought-chain</span> <span class=\"token attr-name\">[style.margin-inline-start.px]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>16<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">[nxItems]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>items()<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-splitter-panel</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-splitter</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ng-template</span> <span class=\"token attr-name\">#thoughtChainCard</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-descriptions</span> <span class=\"token attr-name\">nzSize</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>small<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">[nzColumn]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-descriptions-item</span> <span class=\"token attr-name\">nzTitle</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Status<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{ status() || '-' }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-descriptions-item</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-descriptions-item</span> <span class=\"token attr-name\">nzTitle</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Update Times<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{ lines().length }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-descriptions-item</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-descriptions</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ng-template</span><span class=\"token punctuation\">></span></span>\n  `</span></span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">NxDemoXRequestModelComponent</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">readonly</span> thoughtChainCard <span class=\"token operator\">=</span> <span class=\"token function\">viewChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">'thoughtChainCard'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> read<span class=\"token operator\">:</span> TemplateRef <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">readonly</span> thoughtChainStatus <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">signal</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>NxThoughtChainItem<span class=\"token punctuation\">[</span><span class=\"token string\">'status'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">readonly</span> questionText <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">model</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello, who are u?'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/**\n   * 🔔 Please replace the BASE_URL, PATH, MODEL, API_KEY with your own values.\n   */</span>\n  <span class=\"token keyword\">readonly</span> <span class=\"token constant\">BASE_URL</span> <span class=\"token operator\">=</span> <span class=\"token string\">'https://api.x.ant.design/api/llm_siliconflow_qwen3-8b'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/**\n   * 🔔 The MODEL is fixed in the current request, please replace it with your BASE_UR and MODEL\n   */</span>\n  <span class=\"token keyword\">readonly</span> <span class=\"token constant\">MODEL</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Qwen3-8B'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/**\n   * 🔔 the API_KEY is a placeholder indicator interface that has a built-in real API_KEY\n   */</span>\n  <span class=\"token keyword\">readonly</span> <span class=\"token constant\">API_KEY</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Bearer sk-xxxxxxxxxxxxxxxxxxxx'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">readonly</span> requestOptions <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">signal</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>XRequestOptions<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    baseURL<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">,</span>\n    model<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MODEL</span><span class=\"token punctuation\">,</span>\n    dangerouslyApiKey<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token constant\">API_KEY</span>\n    <span class=\"token comment\">/** 🔥🔥 Its dangerously! */</span>\n    <span class=\"token comment\">// dangerouslyApiKey: API_KEY</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  exampleRequest <span class=\"token operator\">=</span> <span class=\"token function\">XRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    baseURL<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token constant\">BASE_URL</span><span class=\"token punctuation\">,</span>\n    model<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MODEL</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">/** 🔥🔥 Its dangerously! */</span>\n    dangerouslyApiKey<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token constant\">API_KEY</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  abortController<span class=\"token operator\">:</span> AbortController <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">get</span> <span class=\"token function\">path</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token constant\">BASE_URL</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">readonly</span> status <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">signal</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">readonly</span> error <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">signal</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">readonly</span> lines <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">signal</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token builtin\">Array</span><span class=\"token operator\">&lt;</span>Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">>>></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">readonly</span> content <span class=\"token operator\">=</span> <span class=\"token function\">linkedSignal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    source<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lines<span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">computation</span><span class=\"token operator\">:</span> lines <span class=\"token operator\">=></span> lines<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>line <span class=\"token operator\">=></span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">readonly</span> items <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">computed</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>NxThoughtChainItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      title<span class=\"token operator\">:</span> <span class=\"token string\">'Request Log'</span><span class=\"token punctuation\">,</span>\n      status<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">thoughtChainStatus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      icon<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'pending'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'loading'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'tags'</span><span class=\"token punctuation\">,</span>\n      description<span class=\"token operator\">:</span> `request $<span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>`<span class=\"token punctuation\">,</span>\n      content<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">thoughtChainCard</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pending'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>exampleRequest<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>\n      <span class=\"token punctuation\">{</span>\n        messages<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> role<span class=\"token operator\">:</span> <span class=\"token string\">'user'</span><span class=\"token punctuation\">,</span> content<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">questionText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        stream<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token function-variable function\">onSuccess</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'success'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>thoughtChainStatus<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'success'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function-variable function\">onError</span><span class=\"token operator\">:</span> error <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'AbortError'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'abort'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>thoughtChainStatus<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function-variable function\">onUpdate</span><span class=\"token operator\">:</span> msg <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lines<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>pre <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>pre<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function-variable function\">onStream</span><span class=\"token operator\">:</span> controller <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>abortController <span class=\"token operator\">=</span> controller<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">abort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>abortController<span class=\"token operator\">?.</span><span class=\"token function\">abort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n","rawCode":"import { Component, computed, linkedSignal, model, signal, TemplateRef, viewChild } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzDescriptionsModule } from 'ng-zorro-antd/descriptions';\nimport { NzFlexModule } from 'ng-zorro-antd/flex';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzSplitterModule } from 'ng-zorro-antd/splitter';\nimport { NzTypographyModule } from 'ng-zorro-antd/typography';\n\nimport { NxThoughtChainItem, NxThoughtChainModule } from 'ng-zorro-x/thought-chain';\nimport { XRequest, XRequestOptions } from 'ng-zorro-x/x-request';\n\n@Component({\n  selector: 'nx-demo-x-request-model',\n  imports: [\n    FormsModule,\n    NzButtonModule,\n    NzDescriptionsModule,\n    NzFlexModule,\n    NzInputModule,\n    NzSplitterModule,\n    NzTypographyModule,\n    NxThoughtChainModule\n  ],\n  template: `\n    <nz-splitter>\n      <nz-splitter-panel>\n        <nz-flex nzVertical nzGap=\"large\" [style.margin-inline-end.px]=\"16\">\n          <input nz-input [(ngModel)]=\"questionText\" />\n          <nz-flex nzGap=\"small\">\n            <button nz-button nzType=\"primary\" [disabled]=\"status() === 'pending'\" (click)=\"request()\">\n              Request\n            </button>\n            <button nz-button nzType=\"primary\" [disabled]=\"status() !== 'pending'\" (click)=\"abort()\">\n              Request Abort\n            </button>\n          </nz-flex>\n        </nz-flex>\n      </nz-splitter-panel>\n      <nz-splitter-panel>\n        <nx-thought-chain [style.margin-inline-start.px]=\"16\" [nxItems]=\"items()\" />\n      </nz-splitter-panel>\n    </nz-splitter>\n\n    <ng-template #thoughtChainCard>\n      <nz-descriptions nzSize=\"small\" [nzColumn]=\"1\">\n        <nz-descriptions-item nzTitle=\"Status\">{{ status() || '-' }}</nz-descriptions-item>\n        <nz-descriptions-item nzTitle=\"Update Times\">{{ lines().length }}</nz-descriptions-item>\n      </nz-descriptions>\n    </ng-template>\n  `\n})\nexport class NxDemoXRequestModelComponent {\n  readonly thoughtChainCard = viewChild('thoughtChainCard', { read: TemplateRef });\n  readonly thoughtChainStatus = signal<NxThoughtChainItem['status']>(undefined);\n\n  readonly questionText = model<string>('hello, who are u?');\n\n  /**\n   * 🔔 Please replace the BASE_URL, PATH, MODEL, API_KEY with your own values.\n   */\n  readonly BASE_URL = 'https://api.x.ant.design/api/llm_siliconflow_qwen3-8b';\n  /**\n   * 🔔 The MODEL is fixed in the current request, please replace it with your BASE_UR and MODEL\n   */\n  readonly MODEL = 'Qwen3-8B';\n  /**\n   * 🔔 the API_KEY is a placeholder indicator interface that has a built-in real API_KEY\n   */\n  readonly API_KEY = 'Bearer sk-xxxxxxxxxxxxxxxxxxxx';\n  readonly requestOptions = signal<XRequestOptions>({\n    baseURL: this.path,\n    model: this.MODEL,\n    dangerouslyApiKey: this.API_KEY\n    /** 🔥🔥 Its dangerously! */\n    // dangerouslyApiKey: API_KEY\n  });\n\n  exampleRequest = XRequest({\n    baseURL: this.BASE_URL,\n    model: this.MODEL,\n    /** 🔥🔥 Its dangerously! */\n    dangerouslyApiKey: this.API_KEY\n  });\n  abortController: AbortController | null = null;\n\n  get path(): string {\n    return this.BASE_URL;\n  }\n\n  readonly status = signal<string | null>(null);\n  readonly error = signal<string>('');\n  readonly lines = signal<Array<Record<string, string>>>([]);\n  readonly content = linkedSignal({\n    source: this.lines,\n    computation: lines => lines.map(line => JSON.parse(line.data).content).join('')\n  });\n  readonly items = computed<NxThoughtChainItem[]>(() => [\n    {\n      title: 'Request Log',\n      status: this.thoughtChainStatus(),\n      icon: this.status() === 'pending' ? 'loading' : 'tags',\n      description: `request ${this.status()}`,\n      content: this.thoughtChainCard()\n    }\n  ]);\n\n  async request(): Promise<void> {\n    this.status.set('pending');\n\n    await this.exampleRequest.create(\n      {\n        messages: [{ role: 'user', content: this.questionText() }],\n        stream: true\n      },\n      {\n        onSuccess: () => {\n          this.status.set('success');\n          this.thoughtChainStatus.set('success');\n        },\n        onError: error => {\n          if (error.name === 'AbortError') {\n            this.status.set('abort');\n          }\n          this.thoughtChainStatus.set('error');\n        },\n        onUpdate: msg => {\n          this.lines.update(pre => [...pre, msg]);\n        },\n        onStream: controller => {\n          this.abortController = controller;\n        }\n      }\n    );\n  }\n\n  abort(): void {\n    this.abortController?.abort();\n  }\n}\n"}
