{"highlightCode":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Component<span class=\"token punctuation\">,</span> computed<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">,</span> signal <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> FormsModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/forms'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> NzFlexModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ng-zorro-antd/flex'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> NxBubbleListItem<span class=\"token punctuation\">,</span> NxBubbleModule<span class=\"token punctuation\">,</span> NxBubbleRole <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ng-zorro-x/bubble'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> NxSenderModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ng-zorro-x/sender'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> XAgent <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ng-zorro-x/x-agent'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> XChat <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ng-zorro-x/x-chat'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Role</span> <span class=\"token operator\">=</span> <span class=\"token string\">'assistant'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'user'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * ðŸ”” Please replace the BASE_URL, PATH, MODEL, API_KEY with your own values.\n */</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">BASE_URL</span> <span class=\"token operator\">=</span> <span class=\"token string\">'https://api.x.ant.design/api/llm_siliconflow_deepSeek-r1-distill-1wen-7b'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * ðŸ”” The MODEL is fixed in the current request, please replace it with your BASE_UR and MODEL\n */</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">MODEL</span> <span class=\"token operator\">=</span> <span class=\"token string\">'DeepSeek-R1-Distill-Qwen-7B'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * ðŸ”” the API_KEY is a placeholder indicator interface that has a built-in real API_KEY\n */</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">API_KEY</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Bearer sk-xxxxxxxxxxxxxxxxxxxx'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">YourMessageType</span> <span class=\"token punctuation\">{</span>\n  role<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  content<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Component</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  selector<span class=\"token operator\">:</span> <span class=\"token string\">'nx-demo-x-chat-model'</span><span class=\"token punctuation\">,</span>\n  imports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>FormsModule<span class=\"token punctuation\">,</span> NzFlexModule<span class=\"token punctuation\">,</span> NxBubbleModule<span class=\"token punctuation\">,</span> NxSenderModule<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token template-string\">template: <span class=\"token html\">`\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-flex</span> <span class=\"token attr-name\">nzVertical</span> <span class=\"token attr-name\">nzGap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>middle<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nx-bubble-list</span> <span class=\"token attr-name\">[nxItems]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>items()<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">[nxRoles]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>roles<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nx-sender</span>\n        <span class=\"token attr-name\">[(ngModel)]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>prompt<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">[nxLoading]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>agent.isRequesting()<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">(nxCancel)</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>abortController?.abort()<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">(nxSubmit)</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>request()<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-flex</span><span class=\"token punctuation\">></span></span>\n  `</span></span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">NxDemoXChatModelComponent</span> <span class=\"token punctuation\">{</span>\n  prompt <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">model</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">readonly</span> mockSuccess <span class=\"token operator\">=</span> <span class=\"token function\">signal</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">readonly</span> roles<span class=\"token operator\">:</span> Record<span class=\"token operator\">&lt;</span>Role<span class=\"token punctuation\">,</span> NxBubbleRole<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    assistant<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      placement<span class=\"token operator\">:</span> <span class=\"token string\">'start'</span><span class=\"token punctuation\">,</span>\n      avatar<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        icon<span class=\"token operator\">:</span> <span class=\"token string\">'user'</span><span class=\"token punctuation\">,</span>\n        style<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> background<span class=\"token operator\">:</span> <span class=\"token string\">'#fde3cf'</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    user<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      placement<span class=\"token operator\">:</span> <span class=\"token string\">'end'</span><span class=\"token punctuation\">,</span>\n      avatar<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        icon<span class=\"token operator\">:</span> <span class=\"token string\">'user'</span><span class=\"token punctuation\">,</span>\n        style<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> background<span class=\"token operator\">:</span> <span class=\"token string\">'#87d068'</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  abortController<span class=\"token operator\">:</span> AbortController <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">readonly</span> agent <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XAgent<span class=\"token operator\">&lt;</span>YourMessageType<span class=\"token operator\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    baseURL<span class=\"token operator\">:</span> <span class=\"token constant\">BASE_URL</span><span class=\"token punctuation\">,</span>\n    model<span class=\"token operator\">:</span> <span class=\"token constant\">MODEL</span><span class=\"token punctuation\">,</span>\n    dangerouslyApiKey<span class=\"token operator\">:</span> <span class=\"token constant\">API_KEY</span>\n    <span class=\"token comment\">/** ðŸ”¥ðŸ”¥ Its dangerously! */</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">readonly</span> chat <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XChat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    agent<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>agent<span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">requestFallback</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> error <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'AbortError'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n          content<span class=\"token operator\">:</span> <span class=\"token string\">'Request is aborted'</span><span class=\"token punctuation\">,</span>\n          role<span class=\"token operator\">:</span> <span class=\"token string\">'assistant'</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        content<span class=\"token operator\">:</span> <span class=\"token string\">'Request failed, please try again!'</span><span class=\"token punctuation\">,</span>\n        role<span class=\"token operator\">:</span> <span class=\"token string\">'assistant'</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">requestPlaceholder</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        content<span class=\"token operator\">:</span> <span class=\"token string\">'Please wait...'</span><span class=\"token punctuation\">,</span>\n        role<span class=\"token operator\">:</span> <span class=\"token string\">'assistant'</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">transformMessage</span><span class=\"token operator\">:</span> info <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> originMessage<span class=\"token punctuation\">,</span> chunk <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> info <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">let</span> currentContent <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">let</span> currentThink <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>chunk<span class=\"token operator\">?.</span>data <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>chunk<span class=\"token operator\">?.</span>data<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DONE'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> message <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>chunk<span class=\"token operator\">?.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          currentThink <span class=\"token operator\">=</span> message<span class=\"token operator\">?.</span>choices<span class=\"token operator\">?.</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">?.</span>delta<span class=\"token operator\">?.</span>reasoning_content <span class=\"token operator\">||</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n          currentContent <span class=\"token operator\">=</span> message<span class=\"token operator\">?.</span>choices<span class=\"token operator\">?.</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">?.</span>delta<span class=\"token operator\">?.</span>content <span class=\"token operator\">||</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token keyword\">let</span> content <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>originMessage<span class=\"token operator\">?.</span>content <span class=\"token operator\">&amp;&amp;</span> currentThink<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        content <span class=\"token operator\">=</span> `<span class=\"token operator\">&lt;</span>think<span class=\"token operator\">></span>$<span class=\"token punctuation\">{</span>currentThink<span class=\"token punctuation\">}</span>`<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\n        originMessage<span class=\"token operator\">?.</span>content<span class=\"token operator\">?.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;think>'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n        <span class=\"token operator\">!</span>originMessage<span class=\"token operator\">?.</span>content<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;/think>'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n        currentContent\n      <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        content <span class=\"token operator\">=</span> `$<span class=\"token punctuation\">{</span>originMessage<span class=\"token operator\">?.</span>content<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>think<span class=\"token operator\">></span>$<span class=\"token punctuation\">{</span>currentContent<span class=\"token punctuation\">}</span>`<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        content <span class=\"token operator\">=</span> `$<span class=\"token punctuation\">{</span>originMessage<span class=\"token operator\">?.</span>content <span class=\"token operator\">||</span> <span class=\"token string\">''</span><span class=\"token punctuation\">}</span>$<span class=\"token punctuation\">{</span>currentThink<span class=\"token punctuation\">}</span>$<span class=\"token punctuation\">{</span>currentContent<span class=\"token punctuation\">}</span>`<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        content<span class=\"token operator\">:</span> content<span class=\"token punctuation\">,</span>\n        role<span class=\"token operator\">:</span> <span class=\"token string\">'assistant'</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">resolveAbortController</span><span class=\"token operator\">:</span> controller <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>abortController <span class=\"token operator\">=</span> controller<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">readonly</span> items <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">computed</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>NxBubbleListItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>chat<span class=\"token punctuation\">.</span><span class=\"token function\">messages</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">,</span> status <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      key<span class=\"token operator\">:</span> id<span class=\"token punctuation\">,</span>\n      loading<span class=\"token operator\">:</span> status <span class=\"token operator\">===</span> <span class=\"token string\">'loading'</span><span class=\"token punctuation\">,</span>\n      role<span class=\"token operator\">:</span> message<span class=\"token punctuation\">.</span>role<span class=\"token punctuation\">,</span>\n      content<span class=\"token operator\">:</span> message<span class=\"token punctuation\">.</span>content\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> prompt <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">prompt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>chat<span class=\"token punctuation\">.</span><span class=\"token function\">onRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> stream<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> message<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> role<span class=\"token operator\">:</span> <span class=\"token string\">'user'</span><span class=\"token punctuation\">,</span> content<span class=\"token operator\">:</span> prompt <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>prompt<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n","rawCode":"import { Component, computed, model, signal } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { NzFlexModule } from 'ng-zorro-antd/flex';\n\nimport { NxBubbleListItem, NxBubbleModule, NxBubbleRole } from 'ng-zorro-x/bubble';\nimport { NxSenderModule } from 'ng-zorro-x/sender';\nimport { XAgent } from 'ng-zorro-x/x-agent';\nimport { XChat } from 'ng-zorro-x/x-chat';\n\ntype Role = 'assistant' | 'user';\n\n/**\n * ðŸ”” Please replace the BASE_URL, PATH, MODEL, API_KEY with your own values.\n */\n\nconst BASE_URL = 'https://api.x.ant.design/api/llm_siliconflow_deepSeek-r1-distill-1wen-7b';\n\n/**\n * ðŸ”” The MODEL is fixed in the current request, please replace it with your BASE_UR and MODEL\n */\n\nconst MODEL = 'DeepSeek-R1-Distill-Qwen-7B';\n\n/**\n * ðŸ”” the API_KEY is a placeholder indicator interface that has a built-in real API_KEY\n */\n\nconst API_KEY = 'Bearer sk-xxxxxxxxxxxxxxxxxxxx';\n\ninterface YourMessageType {\n  role: string;\n  content: string;\n}\n\n@Component({\n  selector: 'nx-demo-x-chat-model',\n  imports: [FormsModule, NzFlexModule, NxBubbleModule, NxSenderModule],\n  template: `\n    <nz-flex nzVertical nzGap=\"middle\">\n      <nx-bubble-list [nxItems]=\"items()\" [nxRoles]=\"roles\" />\n      <nx-sender\n        [(ngModel)]=\"prompt\"\n        [nxLoading]=\"agent.isRequesting()\"\n        (nxCancel)=\"abortController?.abort()\"\n        (nxSubmit)=\"request()\"\n      />\n    </nz-flex>\n  `\n})\nexport class NxDemoXChatModelComponent {\n  prompt = model<string>('');\n  readonly mockSuccess = signal(false);\n  readonly roles: Record<Role, NxBubbleRole> = {\n    assistant: {\n      placement: 'start',\n      avatar: {\n        icon: 'user',\n        style: { background: '#fde3cf' }\n      }\n    },\n    user: {\n      placement: 'end',\n      avatar: {\n        icon: 'user',\n        style: { background: '#87d068' }\n      }\n    }\n  };\n\n  abortController: AbortController | null = null;\n  readonly agent = new XAgent<YourMessageType>({\n    baseURL: BASE_URL,\n    model: MODEL,\n    dangerouslyApiKey: API_KEY\n    /** ðŸ”¥ðŸ”¥ Its dangerously! */\n  });\n  readonly chat = new XChat({\n    agent: this.agent,\n    requestFallback: (_, { error }) => {\n      if (error.name === 'AbortError') {\n        return {\n          content: 'Request is aborted',\n          role: 'assistant'\n        };\n      }\n      return {\n        content: 'Request failed, please try again!',\n        role: 'assistant'\n      };\n    },\n    requestPlaceholder: () => {\n      return {\n        content: 'Please wait...',\n        role: 'assistant'\n      };\n    },\n    transformMessage: info => {\n      const { originMessage, chunk } = info || {};\n      let currentContent = '';\n      let currentThink = '';\n      try {\n        if (chunk?.data && !chunk?.data.includes('DONE')) {\n          const message = JSON.parse(chunk?.data);\n          currentThink = message?.choices?.[0]?.delta?.reasoning_content || '';\n          currentContent = message?.choices?.[0]?.delta?.content || '';\n        }\n      } catch (error) {\n        console.error(error);\n      }\n\n      let content = '';\n\n      if (!originMessage?.content && currentThink) {\n        content = `<think>${currentThink}`;\n      } else if (\n        originMessage?.content?.includes('<think>') &&\n        !originMessage?.content.includes('</think>') &&\n        currentContent\n      ) {\n        content = `${originMessage?.content}</think>${currentContent}`;\n      } else {\n        content = `${originMessage?.content || ''}${currentThink}${currentContent}`;\n      }\n\n      return {\n        content: content,\n        role: 'assistant'\n      };\n    },\n    resolveAbortController: controller => {\n      this.abortController = controller;\n    }\n  });\n  readonly items = computed<NxBubbleListItem[]>(() =>\n    this.chat.messages().map(({ id, message, status }) => ({\n      key: id,\n      loading: status === 'loading',\n      role: message.role,\n      content: message.content\n    }))\n  );\n\n  request(): void {\n    const prompt = this.prompt();\n    this.chat.onRequest({ stream: true, message: { role: 'user', content: prompt } });\n    this.prompt.set('');\n  }\n}\n"}
