{"highlightCode":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Component<span class=\"token punctuation\">,</span> computed<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">,</span> signal<span class=\"token punctuation\">,</span> TemplateRef<span class=\"token punctuation\">,</span> viewChild <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> FormsModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/forms'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> NzFlexModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ng-zorro-antd/flex'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> NxBubbleListItem<span class=\"token punctuation\">,</span> NxBubbleModule<span class=\"token punctuation\">,</span> NxBubbleRole <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ng-zorro-x/bubble'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AnyObject <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ng-zorro-x/core/util'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> NxPrompt<span class=\"token punctuation\">,</span> NxPromptsModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ng-zorro-x/prompts'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> NxSenderModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ng-zorro-x/sender'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> XAgent <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ng-zorro-x/x-agent'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> XChat <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ng-zorro-x/x-chat'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">SUGGESTION_SEPARATOR</span> <span class=\"token operator\">=</span> <span class=\"token string\">'@@SEP@@'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">AgentUserMessage</span> <span class=\"token punctuation\">{</span>\n  type<span class=\"token operator\">:</span> <span class=\"token string\">'user'</span><span class=\"token punctuation\">;</span>\n  content<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">AgentAIMessage</span> <span class=\"token punctuation\">{</span>\n  type<span class=\"token operator\">:</span> <span class=\"token string\">'ai'</span><span class=\"token punctuation\">;</span>\n  content<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  list<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Array</span><span class=\"token operator\">&lt;</span>\n    <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span>\n        type<span class=\"token operator\">:</span> <span class=\"token string\">'text'</span><span class=\"token punctuation\">;</span>\n        content<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span>\n        type<span class=\"token operator\">:</span> <span class=\"token string\">'suggestion'</span><span class=\"token punctuation\">;</span>\n        content<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">AgentMessage</span> <span class=\"token operator\">=</span> AgentUserMessage <span class=\"token operator\">|</span> AgentAIMessage<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> sleep <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span> <span class=\"token operator\">=></span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token builtin\">Promise</span></span><span class=\"token punctuation\">(</span>resolve <span class=\"token operator\">=></span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Component</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  selector<span class=\"token operator\">:</span> <span class=\"token string\">'nx-demo-x-chat-suggestions'</span><span class=\"token punctuation\">,</span>\n  imports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>FormsModule<span class=\"token punctuation\">,</span> NzFlexModule<span class=\"token punctuation\">,</span> NxBubbleModule<span class=\"token punctuation\">,</span> NxPromptsModule<span class=\"token punctuation\">,</span> NxSenderModule<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token template-string\">template: <span class=\"token html\">`\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-flex</span> <span class=\"token attr-name\">nzVertical</span> <span class=\"token attr-name\">nzGap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>middle<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nx-bubble-list</span> <span class=\"token attr-name\">[nxItems]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>items()<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">[nxRoles]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>roles()<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nx-sender</span> <span class=\"token attr-name\">[(ngModel)]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>prompt<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">[nxLoading]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>agent.isRequesting()<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">(nxSubmit)</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>request()<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-flex</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ng-template</span> <span class=\"token attr-name\">#messageRender</span> <span class=\"token attr-name\">let-text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>content<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nx-prompts</span> <span class=\"token attr-name\">nxVertical</span> <span class=\"token attr-name\">[nxItems]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>parsePrompts(text)<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ng-template</span><span class=\"token punctuation\">></span></span>\n  `</span></span><span class=\"token punctuation\">,</span>\n  styles<span class=\"token operator\">:</span> `\n    <span class=\"token operator\">:</span><span class=\"token operator\">:</span>ng<span class=\"token operator\">-</span>deep <span class=\"token punctuation\">.</span>ant<span class=\"token operator\">-</span>prompts<span class=\"token operator\">-</span>icon <span class=\"token punctuation\">{</span>\n      color<span class=\"token operator\">:</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span><span class=\"token number\">250</span><span class=\"token punctuation\">,</span> <span class=\"token number\">173</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  `\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">NxDemoXChatSuggestionsComponent</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">readonly</span> messageRender <span class=\"token operator\">=</span> <span class=\"token function\">viewChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">'messageRender'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> read<span class=\"token operator\">:</span> TemplateRef <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  prompt <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">model</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">readonly</span> mockSuccess <span class=\"token operator\">=</span> <span class=\"token function\">signal</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">readonly</span> roles <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">computed</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> NxBubbleRole<span class=\"token operator\">>></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    user<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      placement<span class=\"token operator\">:</span> <span class=\"token string\">'end'</span><span class=\"token punctuation\">,</span>\n      avatar<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        icon<span class=\"token operator\">:</span> <span class=\"token string\">'user'</span><span class=\"token punctuation\">,</span>\n        style<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> background<span class=\"token operator\">:</span> <span class=\"token string\">'#87d068'</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    text<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      placement<span class=\"token operator\">:</span> <span class=\"token string\">'start'</span><span class=\"token punctuation\">,</span>\n      avatar<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        icon<span class=\"token operator\">:</span> <span class=\"token string\">'user'</span><span class=\"token punctuation\">,</span>\n        style<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> background<span class=\"token operator\">:</span> <span class=\"token string\">'#fde3cf'</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    suggestion<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      placement<span class=\"token operator\">:</span> <span class=\"token string\">'start'</span><span class=\"token punctuation\">,</span>\n      avatar<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        icon<span class=\"token operator\">:</span> <span class=\"token string\">'user'</span><span class=\"token punctuation\">,</span>\n        style<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> background<span class=\"token operator\">:</span> <span class=\"token string\">'#fde3cf'</span><span class=\"token punctuation\">,</span> visibility<span class=\"token operator\">:</span> <span class=\"token string\">'hidden'</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      variant<span class=\"token operator\">:</span> <span class=\"token string\">'borderless'</span><span class=\"token punctuation\">,</span>\n      messageRender<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">messageRender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">readonly</span> agent <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XAgent<span class=\"token operator\">&lt;</span>AgentMessage<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> message<span class=\"token operator\">:</span> AgentAIMessage <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> AnyObject<span class=\"token operator\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">request</span><span class=\"token operator\">:</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> message <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> onSuccess <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">await</span> <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> content <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> message <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">onSuccess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n          type<span class=\"token operator\">:</span> <span class=\"token string\">'ai'</span><span class=\"token punctuation\">,</span>\n          list<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token punctuation\">{</span>\n              type<span class=\"token operator\">:</span> <span class=\"token string\">'text'</span><span class=\"token punctuation\">,</span>\n              content<span class=\"token operator\">:</span> `Do you want<span class=\"token operator\">?</span>`\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">{</span>\n              type<span class=\"token operator\">:</span> <span class=\"token string\">'suggestion'</span><span class=\"token punctuation\">,</span>\n              content<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>`Look at<span class=\"token operator\">:</span> $<span class=\"token punctuation\">{</span>content<span class=\"token punctuation\">}</span>`<span class=\"token punctuation\">,</span> `Search<span class=\"token operator\">:</span> $<span class=\"token punctuation\">{</span>content<span class=\"token punctuation\">}</span>`<span class=\"token punctuation\">,</span> `Try<span class=\"token operator\">:</span> $<span class=\"token punctuation\">{</span>content<span class=\"token punctuation\">}</span>`<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token constant\">SUGGESTION_SEPARATOR</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">readonly</span> chat <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XChat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    agent<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>agent<span class=\"token punctuation\">,</span>\n    defaultMessages<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        id<span class=\"token operator\">:</span> <span class=\"token string\">'init'</span><span class=\"token punctuation\">,</span>\n        message<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          type<span class=\"token operator\">:</span> <span class=\"token string\">'ai'</span><span class=\"token punctuation\">,</span>\n          content<span class=\"token operator\">:</span> <span class=\"token string\">'Hello, what can I do for you?'</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        status<span class=\"token operator\">:</span> <span class=\"token string\">'success'</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    requestPlaceholder<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      type<span class=\"token operator\">:</span> <span class=\"token string\">'ai'</span><span class=\"token punctuation\">,</span>\n      content<span class=\"token operator\">:</span> <span class=\"token string\">'Waiting...'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// Convert AgentMessage to BubbleMessage</span>\n    <span class=\"token function-variable function\">parser</span><span class=\"token operator\">:</span> agentMessages <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> list <span class=\"token operator\">=</span> agentMessages<span class=\"token punctuation\">.</span>content <span class=\"token operator\">?</span> <span class=\"token punctuation\">[</span>agentMessages<span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>agentMessages <span class=\"token keyword\">as</span> AgentAIMessage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>list <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>msg <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        role<span class=\"token operator\">:</span> msg<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">,</span>\n        content<span class=\"token operator\">:</span> msg<span class=\"token punctuation\">.</span>content\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">readonly</span> items <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">computed</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>NxBubbleListItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>chat<span class=\"token punctuation\">.</span><span class=\"token function\">parsedMessages</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">,</span> status <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      key<span class=\"token operator\">:</span> id<span class=\"token punctuation\">,</span>\n      loading<span class=\"token operator\">:</span> status <span class=\"token operator\">===</span> <span class=\"token string\">'loading'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token operator\">...</span>message\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> prompt <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">prompt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>chat<span class=\"token punctuation\">.</span><span class=\"token function\">onRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> <span class=\"token string\">'user'</span><span class=\"token punctuation\">,</span> content<span class=\"token operator\">:</span> prompt <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>prompt<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">parsePrompts</span><span class=\"token punctuation\">(</span>suggestions<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> NxPrompt<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> suggestions<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token constant\">SUGGESTION_SEPARATOR</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>suggestion <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      label<span class=\"token operator\">:</span> suggestion<span class=\"token punctuation\">,</span>\n      icon<span class=\"token operator\">:</span> <span class=\"token string\">'smile'</span><span class=\"token punctuation\">,</span>\n      key<span class=\"token operator\">:</span> suggestion\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n","rawCode":"import { Component, computed, model, signal, TemplateRef, viewChild } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { NzFlexModule } from 'ng-zorro-antd/flex';\n\nimport { NxBubbleListItem, NxBubbleModule, NxBubbleRole } from 'ng-zorro-x/bubble';\nimport { AnyObject } from 'ng-zorro-x/core/util';\nimport { NxPrompt, NxPromptsModule } from 'ng-zorro-x/prompts';\nimport { NxSenderModule } from 'ng-zorro-x/sender';\nimport { XAgent } from 'ng-zorro-x/x-agent';\nimport { XChat } from 'ng-zorro-x/x-chat';\n\nconst SUGGESTION_SEPARATOR = '@@SEP@@';\n\ninterface AgentUserMessage {\n  type: 'user';\n  content: string;\n}\n\ninterface AgentAIMessage {\n  type: 'ai';\n  content?: string;\n  list?: Array<\n    | {\n        type: 'text';\n        content: string;\n      }\n    | {\n        type: 'suggestion';\n        content: string;\n      }\n  >;\n}\n\ntype AgentMessage = AgentUserMessage | AgentAIMessage;\n\nconst sleep = (): Promise<void> => new Promise(resolve => setTimeout(resolve, 1000));\n\n@Component({\n  selector: 'nx-demo-x-chat-suggestions',\n  imports: [FormsModule, NzFlexModule, NxBubbleModule, NxPromptsModule, NxSenderModule],\n  template: `\n    <nz-flex nzVertical nzGap=\"middle\">\n      <nx-bubble-list [nxItems]=\"items()\" [nxRoles]=\"roles()\" />\n      <nx-sender [(ngModel)]=\"prompt\" [nxLoading]=\"agent.isRequesting()\" (nxSubmit)=\"request()\" />\n    </nz-flex>\n\n    <ng-template #messageRender let-text=\"content\">\n      <nx-prompts nxVertical [nxItems]=\"parsePrompts(text)\" />\n    </ng-template>\n  `,\n  styles: `\n    ::ng-deep .ant-prompts-icon {\n      color: rgb(250, 173, 20);\n    }\n  `\n})\nexport class NxDemoXChatSuggestionsComponent {\n  readonly messageRender = viewChild('messageRender', { read: TemplateRef });\n  prompt = model<string>('');\n  readonly mockSuccess = signal(false);\n  readonly roles = computed<Record<string, NxBubbleRole>>(() => ({\n    user: {\n      placement: 'end',\n      avatar: {\n        icon: 'user',\n        style: { background: '#87d068' }\n      }\n    },\n    text: {\n      placement: 'start',\n      avatar: {\n        icon: 'user',\n        style: { background: '#fde3cf' }\n      }\n    },\n    suggestion: {\n      placement: 'start',\n      avatar: {\n        icon: 'user',\n        style: { background: '#fde3cf', visibility: 'hidden' }\n      },\n      variant: 'borderless',\n      messageRender: this.messageRender()\n    }\n  }));\n\n  readonly agent = new XAgent<AgentMessage, { message: AgentAIMessage }, AnyObject>({\n    request: async ({ message }, { onSuccess }) => {\n      await sleep();\n      const { content } = message || {};\n      onSuccess([\n        {\n          type: 'ai',\n          list: [\n            {\n              type: 'text',\n              content: `Do you want?`\n            },\n            {\n              type: 'suggestion',\n              content: [`Look at: ${content}`, `Search: ${content}`, `Try: ${content}`].join(SUGGESTION_SEPARATOR)\n            }\n          ]\n        }\n      ]);\n    }\n  });\n  readonly chat = new XChat({\n    agent: this.agent,\n    defaultMessages: [\n      {\n        id: 'init',\n        message: {\n          type: 'ai',\n          content: 'Hello, what can I do for you?'\n        },\n        status: 'success'\n      }\n    ],\n    requestPlaceholder: {\n      type: 'ai',\n      content: 'Waiting...'\n    },\n    // Convert AgentMessage to BubbleMessage\n    parser: agentMessages => {\n      const list = agentMessages.content ? [agentMessages] : (agentMessages as AgentAIMessage).list;\n      return (list || []).map(msg => ({\n        role: msg.type,\n        content: msg.content\n      }));\n    }\n  });\n  readonly items = computed<NxBubbleListItem[]>(() =>\n    this.chat.parsedMessages().map(({ id, message, status }) => ({\n      key: id,\n      loading: status === 'loading',\n      ...message\n    }))\n  );\n\n  request(): void {\n    const prompt = this.prompt();\n    this.chat.onRequest({ type: 'user', content: prompt });\n    this.prompt.set('');\n  }\n\n  parsePrompts(suggestions: string): NxPrompt[] {\n    return suggestions.split(SUGGESTION_SEPARATOR).map(suggestion => ({\n      label: suggestion,\n      icon: 'smile',\n      key: suggestion\n    }));\n  }\n}\n"}
