{"highlightCode":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Component<span class=\"token punctuation\">,</span> computed<span class=\"token punctuation\">,</span> linkedSignal<span class=\"token punctuation\">,</span> signal<span class=\"token punctuation\">,</span> TemplateRef<span class=\"token punctuation\">,</span> viewChild <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/core'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> NzButtonModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ng-zorro-antd/button'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> NzSplitterModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ng-zorro-antd/splitter'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> NxThoughtChainItem<span class=\"token punctuation\">,</span> NxThoughtChainModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ng-zorro-x/thought-chain'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> XRequest <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ng-zorro-x/x-request'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">ND_JSON_SEPARATOR</span> <span class=\"token operator\">=</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">mockFetch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>Response<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> ndJsonData <span class=\"token operator\">=</span> `<span class=\"token punctuation\">{</span>data<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token string-property property\">\"id\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span><span class=\"token string-property property\">\"choices\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token string-property property\">\"index\"</span><span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token string-property property\">\"delta\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token string-property property\">\"content\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">,</span><span class=\"token string-property property\">\"role\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"assistant\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string-property property\">\"created\"</span><span class=\"token operator\">:</span><span class=\"token number\">1733129200</span><span class=\"token punctuation\">,</span><span class=\"token string-property property\">\"model\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"gpt-4o\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span>data<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token string-property property\">\"id\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span><span class=\"token string-property property\">\"choices\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token string-property property\">\"index\"</span><span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string-property property\">\"delta\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token string-property property\">\"content\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"world!\"</span><span class=\"token punctuation\">,</span><span class=\"token string-property property\">\"role\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"assistant\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string-property property\">\"created\"</span><span class=\"token operator\">:</span><span class=\"token number\">1733129300</span><span class=\"token punctuation\">,</span><span class=\"token string-property property\">\"model\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"gpt-4o\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span>data<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token string-property property\">\"id\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"2\"</span><span class=\"token punctuation\">,</span><span class=\"token string-property property\">\"choices\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token string-property property\">\"index\"</span><span class=\"token operator\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string-property property\">\"delta\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token string-property property\">\"content\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"I\"</span><span class=\"token punctuation\">,</span><span class=\"token string-property property\">\"role\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"assistant\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string-property property\">\"created\"</span><span class=\"token operator\">:</span><span class=\"token number\">1733129400</span><span class=\"token punctuation\">,</span><span class=\"token string-property property\">\"model\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"gpt-4o\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span>data<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token string-property property\">\"id\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"3\"</span><span class=\"token punctuation\">,</span><span class=\"token string-property property\">\"choices\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token string-property property\">\"index\"</span><span class=\"token operator\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string-property property\">\"delta\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token string-property property\">\"content\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"am\"</span><span class=\"token punctuation\">,</span><span class=\"token string-property property\">\"role\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"assistant\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string-property property\">\"created\"</span><span class=\"token operator\">:</span><span class=\"token number\">1733129500</span><span class=\"token punctuation\">,</span><span class=\"token string-property property\">\"model\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"gpt-4o\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span>data<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token string-property property\">\"id\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"4\"</span><span class=\"token punctuation\">,</span><span class=\"token string-property property\">\"choices\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token string-property property\">\"index\"</span><span class=\"token operator\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string-property property\">\"delta\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token string-property property\">\"content\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"Ant Design X!\"</span><span class=\"token punctuation\">,</span><span class=\"token string-property property\">\"role\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"assistant\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string-property property\">\"created\"</span><span class=\"token operator\">:</span><span class=\"token number\">1733129600</span><span class=\"token punctuation\">,</span><span class=\"token string-property property\">\"model\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"gpt-4o\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>`<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> chunks <span class=\"token operator\">=</span> ndJsonData<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token constant\">ND_JSON_SEPARATOR</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Response</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReadableStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">async</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span>controller<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> chunk <span class=\"token keyword\">of</span> chunks<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">await</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token builtin\">Promise</span></span><span class=\"token punctuation\">(</span>resolve <span class=\"token operator\">=></span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          controller<span class=\"token punctuation\">.</span><span class=\"token function\">enqueue</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">TextEncoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>chunk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        controller<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      headers<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string-property property\">'Content-Type'</span><span class=\"token operator\">:</span> <span class=\"token string\">'application/x-ndjson'</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Component</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  selector<span class=\"token operator\">:</span> <span class=\"token string\">'nx-demo-x-request-custom-transformer'</span><span class=\"token punctuation\">,</span>\n  imports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>NzButtonModule<span class=\"token punctuation\">,</span> NzSplitterModule<span class=\"token punctuation\">,</span> NxThoughtChainModule<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token template-string\">template: <span class=\"token html\">`\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-splitter</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-splitter-panel</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">nz-button</span> <span class=\"token attr-name\">nzType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>primary<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">[disabled]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>status() === 'pending'<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">(click)</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>request()<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n          Request - {{ path }}\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-splitter-panel</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-splitter-panel</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nx-thought-chain</span> <span class=\"token attr-name\">[style.margin-inline-start.px]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>16<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">[nxItems]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>items()<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-splitter-panel</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-splitter</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ng-template</span> <span class=\"token attr-name\">#thoughtChainCard</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pre</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>code</span><span class=\"token punctuation\">></span></span>{{ content() }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>code</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pre</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ng-template</span><span class=\"token punctuation\">></span></span>\n  `</span></span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">NxDemoXRequestCustomTransformerComponent</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">readonly</span> thoughtChainCard <span class=\"token operator\">=</span> <span class=\"token function\">viewChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">'thoughtChainCard'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> read<span class=\"token operator\">:</span> TemplateRef <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/**\n   * 🔔 Please replace the BASE_URL, PATH, MODEL, API_KEY with your own values.\n   */</span>\n  <span class=\"token keyword\">readonly</span> <span class=\"token constant\">BASE_URL</span> <span class=\"token operator\">=</span> <span class=\"token string\">'https://api.example.com'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">readonly</span> <span class=\"token constant\">PATH</span> <span class=\"token operator\">=</span> <span class=\"token string\">'/chat'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">readonly</span> <span class=\"token constant\">MODEL</span> <span class=\"token operator\">=</span> <span class=\"token string\">'gpt-3.5-turbo'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// readonly API_KEY = '';</span>\n\n  <span class=\"token keyword\">readonly</span> exampleRequest <span class=\"token operator\">=</span> <span class=\"token function\">XRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    baseURL<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">,</span>\n    model<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MODEL</span><span class=\"token punctuation\">,</span>\n    fetch<span class=\"token operator\">:</span> mockFetch\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">get</span> <span class=\"token function\">path</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token constant\">BASE_URL</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token constant\">PATH</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">readonly</span> status <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">signal</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>NxThoughtChainItem<span class=\"token punctuation\">[</span><span class=\"token string\">'status'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">readonly</span> lines <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">signal</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">readonly</span> content <span class=\"token operator\">=</span> <span class=\"token function\">linkedSignal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    source<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lines<span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">computation</span><span class=\"token operator\">:</span> lines <span class=\"token operator\">=></span> lines<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token constant\">ND_JSON_SEPARATOR</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">readonly</span> items <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">computed</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>NxThoughtChainItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      title<span class=\"token operator\">:</span> <span class=\"token string\">'Mock Custom Protocol Log'</span><span class=\"token punctuation\">,</span>\n      status<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      icon<span class=\"token operator\">:</span> <span class=\"token string\">'tags'</span><span class=\"token punctuation\">,</span>\n      content<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">thoughtChainCard</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pending'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>exampleRequest<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>\n      <span class=\"token punctuation\">{</span>\n        messages<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> role<span class=\"token operator\">:</span> <span class=\"token string\">'user'</span><span class=\"token punctuation\">,</span> content<span class=\"token operator\">:</span> <span class=\"token string\">'hello, who are u?'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        stream<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token function-variable function\">onSuccess</span><span class=\"token operator\">:</span> msg <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'success'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'onSuccess'</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function-variable function\">onError</span><span class=\"token operator\">:</span> error <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'onError'</span><span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function-variable function\">onUpdate</span><span class=\"token operator\">:</span> msg <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lines<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>pre <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>pre<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'onUpdate'</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">new</span> <span class=\"token class-name\">TransformStream<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">transform</span><span class=\"token punctuation\">(</span>chunk<span class=\"token punctuation\">,</span> controller<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          controller<span class=\"token punctuation\">.</span><span class=\"token function\">enqueue</span><span class=\"token punctuation\">(</span>chunk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n","rawCode":"import { Component, computed, linkedSignal, signal, TemplateRef, viewChild } from '@angular/core';\n\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzSplitterModule } from 'ng-zorro-antd/splitter';\n\nimport { NxThoughtChainItem, NxThoughtChainModule } from 'ng-zorro-x/thought-chain';\nimport { XRequest } from 'ng-zorro-x/x-request';\n\nconst ND_JSON_SEPARATOR = '\\n';\n\nasync function mockFetch(): Promise<Response> {\n  const ndJsonData = `{data:{\"id\":\"0\",\"choices\":[{\"index\":0,\"delta\":{\"content\":\"Hello\",\"role\":\"assistant\"}}],\"created\":1733129200,\"model\":\"gpt-4o\"}}\n{data:{\"id\":\"1\",\"choices\":[{\"index\":1,\"delta\":{\"content\":\"world!\",\"role\":\"assistant\"}}],\"created\":1733129300,\"model\":\"gpt-4o\"}}\n{data:{\"id\":\"2\",\"choices\":[{\"index\":2,\"delta\":{\"content\":\"I\",\"role\":\"assistant\"}}],\"created\":1733129400,\"model\":\"gpt-4o\"}}\n{data:{\"id\":\"3\",\"choices\":[{\"index\":3,\"delta\":{\"content\":\"am\",\"role\":\"assistant\"}}],\"created\":1733129500,\"model\":\"gpt-4o\"}}\n{data:{\"id\":\"4\",\"choices\":[{\"index\":4,\"delta\":{\"content\":\"Ant Design X!\",\"role\":\"assistant\"}}],\"created\":1733129600,\"model\":\"gpt-4o\"}}`;\n\n  const chunks = ndJsonData.split(ND_JSON_SEPARATOR);\n\n  const response = new Response(\n    new ReadableStream({\n      async start(controller) {\n        for (const chunk of chunks) {\n          await new Promise(resolve => setTimeout(resolve, 100));\n          controller.enqueue(new TextEncoder().encode(chunk));\n        }\n        controller.close();\n      }\n    }),\n    {\n      headers: {\n        'Content-Type': 'application/x-ndjson'\n      }\n    }\n  );\n\n  return response;\n}\n\n@Component({\n  selector: 'nx-demo-x-request-custom-transformer',\n  imports: [NzButtonModule, NzSplitterModule, NxThoughtChainModule],\n  template: `\n    <nz-splitter>\n      <nz-splitter-panel>\n        <button nz-button nzType=\"primary\" [disabled]=\"status() === 'pending'\" (click)=\"request()\">\n          Request - {{ path }}\n        </button>\n      </nz-splitter-panel>\n      <nz-splitter-panel>\n        <nx-thought-chain [style.margin-inline-start.px]=\"16\" [nxItems]=\"items()\" />\n      </nz-splitter-panel>\n    </nz-splitter>\n\n    <ng-template #thoughtChainCard>\n      <pre>\n        <code>{{ content() }}</code>\n      </pre>\n    </ng-template>\n  `\n})\nexport class NxDemoXRequestCustomTransformerComponent {\n  readonly thoughtChainCard = viewChild('thoughtChainCard', { read: TemplateRef });\n\n  /**\n   * 🔔 Please replace the BASE_URL, PATH, MODEL, API_KEY with your own values.\n   */\n  readonly BASE_URL = 'https://api.example.com';\n  readonly PATH = '/chat';\n  readonly MODEL = 'gpt-3.5-turbo';\n  // readonly API_KEY = '';\n\n  readonly exampleRequest = XRequest({\n    baseURL: this.path,\n    model: this.MODEL,\n    fetch: mockFetch\n  });\n\n  get path(): string {\n    return this.BASE_URL + this.PATH;\n  }\n\n  readonly status = signal<NxThoughtChainItem['status']>(undefined);\n  readonly lines = signal<string[]>([]);\n  readonly content = linkedSignal({\n    source: this.lines,\n    computation: lines => lines.join(ND_JSON_SEPARATOR)\n  });\n  readonly items = computed<NxThoughtChainItem[]>(() => [\n    {\n      title: 'Mock Custom Protocol Log',\n      status: this.status(),\n      icon: 'tags',\n      content: this.thoughtChainCard()\n    }\n  ]);\n\n  async request(): Promise<void> {\n    this.status.set('pending');\n\n    await this.exampleRequest.create(\n      {\n        messages: [{ role: 'user', content: 'hello, who are u?' }],\n        stream: true\n      },\n      {\n        onSuccess: msg => {\n          this.status.set('success');\n          console.log('onSuccess', msg);\n        },\n        onError: error => {\n          this.status.set('error');\n          console.error('onError', error);\n        },\n        onUpdate: msg => {\n          this.lines.update(pre => [...pre, msg]);\n          console.log('onUpdate', msg);\n        }\n      },\n      new TransformStream<string, string>({\n        transform(chunk, controller) {\n          controller.enqueue(chunk);\n        }\n      })\n    );\n  }\n}\n"}
